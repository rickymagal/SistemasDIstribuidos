# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import FedLearningProto_pb2 as FedLearningProto__pb2


class TrainingServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterClient = channel.unary_unary(
                '/TrainingServer/RegisterClient',
                request_serializer=FedLearningProto__pb2.RegistrationRequest.SerializeToString,
                response_deserializer=FedLearningProto__pb2.RegistrationResponse.FromString,
                )


class TrainingServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrainingServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterClient': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterClient,
                    request_deserializer=FedLearningProto__pb2.RegistrationRequest.FromString,
                    response_serializer=FedLearningProto__pb2.RegistrationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TrainingServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TrainingServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TrainingServer/RegisterClient',
            FedLearningProto__pb2.RegistrationRequest.SerializeToString,
            FedLearningProto__pb2.RegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TrainingClientStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartTraining = channel.unary_stream(
                '/TrainingClient/StartTraining',
                request_serializer=FedLearningProto__pb2.TrainingStartRequest.SerializeToString,
                response_deserializer=FedLearningProto__pb2.TrainingResponse.FromString,
                )
        self.EvaluateModel = channel.unary_unary(
                '/TrainingClient/EvaluateModel',
                request_serializer=FedLearningProto__pb2.EvaluationRequest.SerializeToString,
                response_deserializer=FedLearningProto__pb2.EvaluationResponse.FromString,
                )


class TrainingClientServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartTraining(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrainingClientServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartTraining': grpc.unary_stream_rpc_method_handler(
                    servicer.StartTraining,
                    request_deserializer=FedLearningProto__pb2.TrainingStartRequest.FromString,
                    response_serializer=FedLearningProto__pb2.TrainingResponse.SerializeToString,
            ),
            'EvaluateModel': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateModel,
                    request_deserializer=FedLearningProto__pb2.EvaluationRequest.FromString,
                    response_serializer=FedLearningProto__pb2.EvaluationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TrainingClient', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TrainingClient(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartTraining(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TrainingClient/StartTraining',
            FedLearningProto__pb2.TrainingStartRequest.SerializeToString,
            FedLearningProto__pb2.TrainingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TrainingClient/EvaluateModel',
            FedLearningProto__pb2.EvaluationRequest.SerializeToString,
            FedLearningProto__pb2.EvaluationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
