import grpc
import time
from concurrent import futures
import grpcMiner_pb2
import grpcMiner_pb2_grpc


def serve():
    grpc_server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))
    grpcMiner_pb2_grpc.add_apiServicer_to_server(MinerulatorServicer(), grpc_server)
    grpc_server.add_insecure_port('[::]:8080')
    grpc_server.start()
    grpc_server.wait_for_termination()


class MinerulatorServicer(grpcMiner_pb2_grpc.apiServicer):

    def add(self, request, context):
        return grpcMiner_pb2.result(num=(request.numOne + request.numTwo))

if __name__ == '__main__':
    serve()
    
